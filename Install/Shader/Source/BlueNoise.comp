#version 460

// 128 * 128 blue noise
// Global 1spp blue noise for reuse, 

// rg is 1Spp
layout(set = 0, binding = 0, rg8) uniform image2D blueNoiseImage1Spp16Spp;

#define BLUE_NOISE_SET 1
#include "BlueNoiseCommon.glsl"

struct PushConstants
{
	uint frameIndex;
};	

layout(push_constant) uniform constants
{   
   PushConstants consts;
};

// .xy = 1 spp blue noise.
vec2 SampleRandomVector2D(uvec2 pixel) 
{
    #define GOLDEN_RATIO 1.61803398875f
    vec2 u = vec2(
        fmod(SampleRandomNumber1Spp(pixel.x, pixel.y, 0, 0u) + consts.frameIndex * GOLDEN_RATIO, 1.0f),
        fmod(SampleRandomNumber1Spp(pixel.x, pixel.y, 0, 1u) + consts.frameIndex * GOLDEN_RATIO, 1.0f)
    );
    #undef GOLDEN_RATIO

    return u;
}

// 128 * 128
layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
void main() 
{
	imageStore(blueNoiseImage1Spp16Spp, ivec2(gl_GlobalInvocationID.xy), vec4(SampleRandomVector2D(gl_GlobalInvocationID.xy), 0, 0));
}